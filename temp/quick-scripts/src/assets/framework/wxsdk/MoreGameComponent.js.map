{"version":3,"sources":["assets\\framework\\wxsdk\\MoreGameComponent.ts"],"names":[],"mappings":";;;;;AAAA,qDAA0D;AAEpD,IAAA,KAAsB,EAAE,CAAC,UAAU,EAAlC,OAAO,aAAA,EAAE,QAAQ,cAAiB,CAAC;AAE1C;IAA+C,qCAAY;IAA3D;QAAA,qEAyDC;QAtDG,eAAS,GAAW,IAAI,CAAC;QAGzB,qBAAe,GAAW,EAAE,CAAC;QAG7B,kBAAY,GAAW,EAAE,CAAC;QAE1B,WAAK,GAAU,EAAE,CAAA;;IA8CrB,CAAC;IA5CG,sBAAI,oCAAK;aAAT,cAAY,OAAO,CAAC,CAAC,CAAA,CAAC;;;OAAA;IAEtB,sBAAI,sCAAO;aAAX;YAEI,OAAO,yBAAe,CAAC,QAAQ,CAAC;QACpC,CAAC;;;OAAA;IAED,uCAAW,GAAX;QAEI,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,EAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC/D,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;QACpC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAChB,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;IAClC,CAAC;IAED,iCAAK,GAAL;IAGA,CAAC;IAED,oCAAQ,GAAR;QAEI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,EAAC,IAAI,CAAC,eAAe,EAAC,EAAE,CAAC,KAAK,CAAC,cAAc,EAAC,CAAC,CAAC,CAAA;IAClF,CAAC;IAED,qCAAS,GAAT;QAEI,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACtC,CAAC;IAED,kCAAM,GAAN;IAGA,CAAC;IAED,gCAAI,GAAJ,UAAK,IAAI;QAEL,IAAI,CAAC,KAAK,GAAI,IAAI,CAAC;QACnB,IAAI,CAAC,MAAM,EAAE,CAAC;IAClB,CAAC;IAED,sBAAI,mCAAI;aAAR;YACI,OAAO,IAAI,CAAC,KAAK,CAAA;QACrB,CAAC;;;OAAA;IAlDD;QADC,QAAQ;8DACoB;IAG7B;QADC,QAAQ;2DACiB;IATT,iBAAiB;QADrC,OAAO;OACa,iBAAiB,CAyDrC;IAAD,wBAAC;CAzDD,AAyDC,CAzD8C,EAAE,CAAC,SAAS,GAyD1D;kBAzDoB,iBAAiB","file":"","sourceRoot":"/","sourcesContent":["import MoreGameManager, { Task } from \"./MoreGameManager\";\n\nconst {ccclass, property} = cc._decorator;\n@ccclass\nexport default class MoreGameComponent extends cc.Component\n{\n    _manager:MoreGameManager;\n    isManaged:boolean = true;\n\n    @property\n    refreshInterval: number = 60;\n\n    @property\n    priority_min :number = 50;\n\n    _list:Task[] = []\n\n    get count(){return 0;}\n\n    get manager()\n    {\n        return MoreGameManager.instance;\n    }\n\n    requestTask()\n    {\n        let list = this.manager.getTasks(this.priority_min,this.count);\n        this.manager.finishTasks(this._list)\n        this.show(list);\n        this.manager.startTasks(list);\n    }\n\n    start()\n    {\n        \n    }\n\n    onEnable()\n    {\n        this.schedule(this.requestTask,this.refreshInterval,cc.macro.REPEAT_FOREVER,0)\n    }\n\n    onDisable()\n    {\n        this.unschedule(this.requestTask);\n    }\n\n    onShow()\n    {\n        \n    }\n\n    show(list)\n    {\n        this._list =  list;\n        this.onShow();\n    }\n\n    get list(): Task[] {\n        return this._list\n    }\n}"]}