{"version":3,"sources":["assets\\Game\\Scripts\\ui\\RankingList.ts"],"names":[],"mappings":";;;;;AAAA,gCAAmC;AACnC,uCAAkC;AAE5B,IAAA,KAAwB,EAAE,CAAC,UAAU,EAAnC,OAAO,aAAA,EAAE,QAAQ,cAAkB,CAAC;AAG5C;IAAyC,+BAAY;IAArD;QAAA,qEAmFC;QAhFG,gBAAU,GAAkB,IAAI,CAAC;QAGjC,oBAAc,GAAc,IAAI,CAAC;QAEjC,YAAM,GAAW,4DAA4D,CAAC;;IA2ElF,CAAC;IAzEG,2BAAK,GAAL;QACI,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,OAAO,CAAC,GAAG,CAAC,mBAAmB,GAAG,eAAQ,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC;IAEjE,CAAC;IAED,iCAAW,GAAX;QAAA,iBAyCC;QAxCG,IAAM,GAAG,GAAG,IAAI,cAAc,EAAE,CAAC;QACjC,GAAG,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QACnC,GAAG,CAAC,MAAM,GAAG;YACT,IAAI,GAAG,CAAC,MAAM,IAAI,GAAG,IAAI,GAAG,CAAC,MAAM,GAAG,GAAG,EAAE;gBACvC,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;gBAExC,0BAA0B;gBAC1B,IAAI,CAAC,IAAI,CAAC,UAAC,CAAC,EAAE,CAAC,IAAK,OAAA,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,EAAjB,CAAiB,CAAC,CAAC;gBAGvC,6BAA6B;gBAC7B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBAClC,IAAM,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;oBACrB,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,GAAG,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC;oBACzD,IAAI,IAAI,CAAC,KAAK,IAAI,eAAQ,CAAC,KAAK,EAAE;wBAC9B,IAAI,CAAC,KAAK,CAAC,EAAE;4BACT,IAAI,CAAC,KAAK,GAAG,eAAQ,CAAC,KAAK,CAAC;4BAC5B,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;yBACrB;6BAAM;4BACH,IAAM,QAAQ,GAAG,KAAK,CAAC;4BACvB,IAAM,SAAS,GAAG,eAAQ,CAAC,KAAK,CAAC;4BAEjC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;4BAC7B,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;4BAE/B,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC;4BACrB,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC;yBAC1B;qBACJ;iBACJ;gBAED,2BAA2B;gBAC3B,IAAI,CAAC,IAAI,CAAC,UAAC,CAAC,EAAE,CAAC,IAAK,OAAA,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,EAAjB,CAAiB,CAAC,CAAC;gBACvC,KAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC;aACjC;iBAAM;gBACH,OAAO,CAAC,KAAK,CAAC,aAAa,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC;aAC5C;QACL,CAAC,CAAC;QACF,GAAG,CAAC,OAAO,GAAG,cAAM,OAAA,OAAO,CAAC,KAAK,CAAC,mBAAmB,CAAC,EAAlC,CAAkC,CAAC;QACvD,GAAG,CAAC,IAAI,EAAE,CAAC;IACf,CAAC;IAED,wCAAkB,GAAlB,UAAmB,WAAkB;QAArC,iBAiBC;QAdG,IAAM,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC;QACxC,OAAO,CAAC,iBAAiB,EAAE,CAAC;QAE5B,IAAI,eAAQ,CAAC,OAAO;YAEhB,WAAW,CAAC,OAAO,CAAC,UAAC,IAAI,EAAE,KAAK;gBAChC,IAAM,IAAI,GAAG,EAAE,CAAC,WAAW,CAAC,KAAI,CAAC,cAAc,CAAC,CAAC;gBACjD,IAAM,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,kBAAQ,CAAC,CAAC;gBACjD,YAAY,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;gBACpD,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YAC3B,CAAC,CAAC,CAAC;QAEH,IAAM,UAAU,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC;QACnD,OAAO,CAAC,MAAM,GAAG,WAAW,CAAC,MAAM,GAAG,UAAU,CAAC;IACrD,CAAC;IAzED;QADC,QAAQ,CAAC,EAAE,CAAC,UAAU,CAAC;mDACS;IAGjC;QADC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC;uDACa;IANhB,WAAW;QAD/B,OAAO;OACa,WAAW,CAmF/B;IAAD,kBAAC;CAnFD,AAmFC,CAnFwC,EAAE,CAAC,SAAS,GAmFpD;kBAnFoB,WAAW","file":"","sourceRoot":"/","sourcesContent":["import { UserInfo } from \"../Info\";\nimport RankItem from \"./RankItem\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class RankingList extends cc.Component {\n\n    @property(cc.ScrollView)\n    scrollView: cc.ScrollView = null;\n\n    @property(cc.Prefab)\n    rankItemPrefab: cc.Prefab = null;\n\n    apiUrl: string = \"https://5d820f171c8ff70014ef438d.mockapi.io/1/ranking-list\";\n\n    start() {\n        this.loadRanking();\n        console.log(\"UserInfo Level : \" + UserInfo.level.toString());\n\n    }\n\n    loadRanking() {\n        const xhr = new XMLHttpRequest();\n        xhr.open(\"GET\", this.apiUrl, true);\n        xhr.onload = () => {\n            if (xhr.status >= 200 && xhr.status < 300) {\n                let data = JSON.parse(xhr.responseText); \n\n                // Sort ascending by level\n                data.sort((a, b) => a.level - b.level);\n\n\n                // Add you when you in top 10\n                for (let i = 0; i < data.length; i++) {\n                    const item = data[i];\n                    console.error(item.name + \" : \" + item.level.toString());\n                    if (item.level <= UserInfo.level) {\n                        if (i === 0) {\n                            item.level = UserInfo.level;\n                            item.name = \"YOU\";\n                        } else {\n                            const tempName = \"YOU\";\n                            const tempLevel = UserInfo.level;\n\n                            data[i - 1].name = item.name;\n                            data[i - 1].level = item.level;\n\n                            item.name = tempName;\n                            item.level = tempLevel;\n                        }\n                    }\n                }\n\n                // Sort descending by level\n                data.sort((a, b) => b.level - a.level);\n                this.populateScrollView(data);\n            } else {\n                console.error(\"XHR failed:\", xhr.status);\n            }\n        };\n        xhr.onerror = () => console.error(\"XHR request error\");\n        xhr.send();\n    }\n\n    populateScrollView(rankingData: any[]) {\n\n\n        const content = this.scrollView.content;\n        content.removeAllChildren();\n\n        if (UserInfo.getData)\n\n            rankingData.forEach((item, index) => {\n            const node = cc.instantiate(this.rankItemPrefab);\n            const rankItemComp = node.getComponent(RankItem);\n            rankItemComp.init(index + 1, item.level, item.name);\n            content.addChild(node);\n        });\n\n        const itemHeight = this.rankItemPrefab.data.height;\n        content.height = rankingData.length * itemHeight;\n    }\n\n\n\n\n\n\n}\n"]}