{"version":3,"sources":["assets\\framework\\network\\MessageBase.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import {SocketTag} from \"./MessageType\"\r\nimport {Message} from \"./Message\"\r\nimport { connManager } from \"./ConnectManager\";\r\nexport class MessageBase {\r\n\r\n\tprivate _socketKey: string;\r\n\tprivate _allFuncs: {[cmd: number]: Function};\r\n\r\n\tCmd  = {}\r\n\tError = {}\r\n\tpublic constructor() {\r\n\t\tthis._allFuncs = {};\r\n\r\n\t\tfor (var i in game.Command)\r\n        {\r\n            let v = game.Command[i]\r\n            this.Cmd[v] = i;\r\n\t\t}\r\n\t\tfor (var i in game.ErrorCode)\r\n        {\r\n            let v = game.ErrorCode[i]\r\n            this.Error[v] = i;\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n\tpublic useSocketKey(key: string){\r\n\t\tthis._socketKey = key;\r\n\t}\r\n\r\n\tpublic addListener(cmd: any, func: Function){\r\n\t\tthis._allFuncs[cmd] = func;\r\n\t}\r\n\r\n\tpublic removeListener(cmd: any){\r\n\t\tif(this._allFuncs[cmd] != null){\r\n\t\t\tthis._allFuncs[cmd] = null;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic onMessage(obj: any){\r\n\t\tif(obj.type == SocketTag.KSOCKET_MESSAGE){\r\n\t\t\tlet int8a = new Uint8Array(obj.msg);\r\n\t\t\tlet buffer = new flatbuffers.ByteBuffer(int8a);\r\n\t\t\tlet msg:any = game.Package.getRootAsPackage(buffer);\r\n\t\t\tif(this._allFuncs[msg.cmd()] != null){\r\n\t\t\t\treturn this._allFuncs[msg.cmd()].call(this, msg);\r\n\t\t\t}else return this.onHandler(msg);\r\n\t\t} else {\r\n\t\t\tthis.onSocket(obj.type);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 处理socket消息\r\n\t * @param type \r\n\t */\r\n\tpublic onSocket(type: SocketTag){\r\n\r\n\t}\r\n\t\r\n\t/**\r\n\t * 重写消息处理函数\r\n\t * return 消息处理结果，处理完成返回真，否则返回假(消息会入消息队列，等待下次处理)\r\n\t */\r\n\tpublic onHandler(msg: game.Package){\r\n\t\t\r\n\t\treturn false;\r\n\t}\r\n\r\n\tpublic sendMessage(msg: Message){\r\n\t\tconnManager.sendMessage(msg, this._socketKey);\r\n\t}\r\n\r\n\tpublic onDestory(){\r\n\t\tthis._allFuncs = null;\r\n\t}\r\n\r\n\tsend(cmd,cmdstr=\"\",procedure=null,build = null)\r\n\t{\r\n\t\tconsole.log(\"Send Message : [\" + this.Cmd[cmd] +\"]\")\r\n        let socket = connManager.getDefault();\r\n\t\tlet msg = new Message(cmd);\r\n\t\tlet ds = game[cmdstr] \r\n        if(ds != null)\r\n        {\r\n\t\t\tif(build == null)\r\n\t\t\t{\r\n\t\t\t\tbuild = this.createBuilder();\r\n\t\t\t}\r\n            let startFunc = ds[\"start\" + cmdstr] \r\n\t\t\tlet endFunc = ds[\"end\" + cmdstr] \r\n\t\t\tstartFunc.call(ds, build);\r\n            if(procedure)\r\n            {\r\n                procedure(build)\r\n                //game[cmd].addTaskId(build,task_id);\r\n            }\r\n\t\t\tbuild.finish(endFunc.call(ds,build))\r\n\t\t\tmsg.addBuilder(build);\r\n\t\t}else{\r\n\t\t\tmsg.addString(cmdstr);\r\n\t\t}\r\n        socket.sendMessage(msg);\r\n    }\r\n\r\n    createBuilder()\r\n    {\r\n        return new flatbuffers.Builder();\r\n    }\r\n\t\r\n}"]}