{"version":3,"sources":["assets\\framework\\plugin_boosts\\misc\\SpriteFrameCache.ts"],"names":[],"mappings":";;;;;AAAA;IAAA;QAaY,WAAM,GAAmC,EAAE,CAAC;IAkExD,CAAC;IA3EG,sBAAW,4BAAQ;aAAnB;YAEI,IAAG,IAAI,CAAC,SAAS,IAAI,IAAI,EACzB;gBACI,IAAI,CAAC,SAAS,GAAG,IAAI,gBAAgB,EAAE,CAAC;aAC3C;YACD,OAAO,IAAI,CAAC,SAAS,CAAC;QAC1B,CAAC;;;OAAA;IAGK,yCAAc,GAApB,UAAqB,GAAU;uCAAE,OAAO;;;;gBAEhC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAA;gBAC5B,IAAG,KAAK,IAAI,IAAI,EAChB;oBACI,sBAAO,IAAI,OAAO,CAAiB,UAAC,OAAO,EAAC,MAAM;4BAC9C,yDAAyD;4BACzD,IAAG,CAAC,GAAG,IAAG,GAAG,IAAI,EAAE,EAAE;gCACjB,MAAM,CAAC,WAAW,CAAC,CAAA;gCACnB,OAAO;6BACV;4BACD,IAAK,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,EAC9B;gCACI,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,EAAC,EAAE,CAAC,WAAW,EAAC,UAAC,KAAK,EAAC,KAAK;oCAC7C,IAAG,KAAK,EAAC;wCAAC,MAAM,EAAE,CAAC;wCAAA,OAAM;qCAAC;oCAC1B,IAAG,KAAK,EACR;wCACI,KAAI,CAAC,cAAc,CAAC,GAAG,EAAE,KAAK,CAAC,CAAA;wCAC/B,OAAO,CAAC,KAAK,CAAC,CAAA;qCACjB;yCAAI;wCACD,MAAM,EAAE,CAAA;qCACX;gCACL,CAAC,CAAC,CAAA;6BACL;iCAAI;gCACD,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,EAAC,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,KAAK,EAAC,EAAE,UAAC,KAAK,EAAE,OAAO;oCACnD,IAAG,KAAK,EAAC;wCAAC,MAAM,EAAE,CAAC;wCAAA,OAAM;qCAAC;oCAC1B,IAAG,OAAO,EACV;wCACI,KAAK,GAAG,IAAI,EAAE,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;wCACpC,KAAI,CAAC,cAAc,CAAC,GAAG,EAAE,KAAK,CAAC,CAAA;wCAC/B,OAAO,CAAC,KAAK,CAAC,CAAA;qCACjB;yCAAI;wCACD,MAAM,EAAE,CAAA;qCACX;gCACL,CAAC,CAAC,CAAC;6BACN;wBACL,CAAC,CAAC,EAAA;iBACL;gBACD,sBAAO,IAAI,OAAO,CAAiB,UAAC,OAAO,EAAC,MAAM,IAAG,OAAA,OAAO,CAAC,KAAK,CAAC,EAAd,CAAc,CAAC,EAAC;;;KAExE;IAED,yCAAc,GAAd,UAAe,GAAW,EAAE,KAAU;QAClC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;QACzB,OAAO,KAAK,CAAC;IACjB,CAAC;IAGD,gCAAK,GAAL;QAEI,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,MAAM,EACzB;YACI,IAAI,KAAK,GAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAA;YAC3B,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;YACzB,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAA;SACxB;IACL,CAAC;IAED,iCAAM,GAAN,UAAO,CAAC;QAEJ,IAAI,KAAK,GAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAA;QAC3B,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QACzB,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAA;IACzB,CAAC;IAEL,uBAAC;AAAD,CA/EA,AA+EC,IAAA","file":"","sourceRoot":"/","sourcesContent":["export default class SpriteFrameCache\r\n{\r\n    static _instance:SpriteFrameCache;\r\n\r\n    static get instance()\r\n    {\r\n        if(this._instance == null)\r\n        {\r\n            this._instance = new SpriteFrameCache();\r\n        }\r\n        return this._instance;\r\n    }\r\n\r\n    private frames:{[index:string]:cc.SpriteFrame} = {};\r\n    async getSpriteFrame(url:string):Promise<cc.SpriteFrame>\r\n    {\r\n        let frame = this.frames[url]\r\n        if(frame == null)\r\n        {\r\n            return new Promise<cc.SpriteFrame>((resolve,reject)=>{\r\n                // console.log(\"[SpriteFrameCache] request image:\" + url)\r\n                if(!url ||url == \"\") {\r\n                    reject(\"empty-url\")\r\n                    return;\r\n                }\r\n                if ( url.indexOf(\"http\") == -1)\r\n                {\r\n                    cc.loader.loadRes(url,cc.SpriteFrame,(error,frame)=>{\r\n                        if(error){reject();return}\r\n                        if(frame)\r\n                        {\r\n                            this.addSpriteFrame(url ,frame)\r\n                            resolve(frame)\r\n                        }else{\r\n                            reject()\r\n                        }\r\n                    })\r\n                }else{\r\n                    cc.loader.load({url: url, type: 'png'}, (error, texture) =>{\r\n                        if(error){reject();return}\r\n                        if(texture)\r\n                        {\r\n                            frame = new cc.SpriteFrame(texture);\r\n                            this.addSpriteFrame(url ,frame)\r\n                            resolve(frame)\r\n                        }else{\r\n                            reject()\r\n                        }\r\n                    });\r\n                }\r\n            })\r\n        }\r\n        return new Promise<cc.SpriteFrame>((resolve,reject)=>resolve(frame));\r\n        \r\n    }\r\n\r\n    addSpriteFrame(url: string, frame: any): any {\r\n        this.frames[url] = frame;\r\n        return frame;\r\n    }\r\n\r\n\r\n    clear()\r\n    {\r\n        for (var k in this.frames)\r\n        {\r\n            let frame =  this.frames[k]\r\n            cc.loader.release(frame);\r\n            delete this.frames[k]\r\n        }\r\n    }\r\n\r\n    remove(k)\r\n    {\r\n        let frame =  this.frames[k]\r\n        cc.loader.release(frame);\r\n        delete this.frames[k]\r\n    }\r\n\r\n}"]}