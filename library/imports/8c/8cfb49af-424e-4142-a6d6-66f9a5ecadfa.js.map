{"version":3,"sources":["assets\\framework\\network\\Socket.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { MessageHandler } from \"./MessageHandler\";\r\nimport {SocketTag} from \"./MessageType\"\r\nimport { Message } from \"./Message\";\r\n/**\r\n* name \r\n*/\r\n\r\nexport class Socket{\r\n\tprivate _config: any = null;\r\n\tprivate _webSocket: WebSocket;\r\n\tprivate _messageHandler: MessageHandler;\r\n\tprivate _reconnetTimes:number = 200;\r\n\tprivate _defaultTimeout: number = 10000;\r\n\tretryTimer:number = 0;\r\n\tpublic constructor(conf) {\r\n\t\tthis.initSocket(conf);\r\n\t}\r\n\r\n\r\n\tprivate initSocket(conf:any){\r\n\t\tthis._config = conf;\r\n\t\tif(!this._config.timeout) this._config.timeout = this._defaultTimeout;\r\n\t\tif(this._config.retime) this._reconnetTimes = this._config.retime;\r\n\t\tthis.connect()\r\n\t}\r\n\r\n\tprivate connect(){\r\n\t\tlet addr = this._config.host;\r\n\t\tif(this._config.port)\r\n\t\t{\r\n\t\t\taddr = this._config.host +\":\" +this._config.port\r\n\t\t}\r\n\t\tconsole.log(\"start connect server>>>>\" , addr);\r\n\t\tthis._webSocket = new WebSocket(addr);\r\n\t\tthis._messageHandler = new MessageHandler(this._webSocket);\r\n\t\t// this._webSocket.endian = Laya.Byte.BIG_ENDIAN;\r\n\t\t// if(this._config.timeout)this._webSocket.timeout=this._config.timeout;\r\n\t\t\r\n\t\tthis._webSocket.onopen = (event)=>this.onSocketOpen();\r\n\t\tthis._webSocket.onmessage = (event)=>this.onReceiveMessage(event);\r\n\t\tthis._webSocket.onclose = (event)=>this.onSocketClose();\r\n\t\tthis._webSocket.onerror = (event)=>this.onSocketError();\r\n\r\n\t}\r\n\r\n\tpublic close(){\r\n\t\tif(this._webSocket){\r\n\t\t\t// this._webSocket.offAll(null);\r\n\t\t\tthis._webSocket.close();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic flush(){\r\n\t\t// if(this._webSocket.connected){\r\n\t\t\t// this._webSocket.flush();\r\n\t\t// }\r\n\t}\r\n\r\n\tpublic enableHeartbeat(enable) {\r\n\t\tthis._messageHandler.enableHeartbeat = enable;\r\n\t}\r\n\r\n\tprivate onSocketOpen(): void{\r\n\t\tconsole.log(\"connect \" + this._config.host +\" success\");\r\n\t\tthis._messageHandler.dispatch(SocketTag.KSOCKET_OPEN, \"\");\r\n\t}\r\n\r\n\tprivate onReceiveMessage(event: any = null): void{\r\n\t\tconsole.log(\"websocket receive message:\" + event.data);\r\n\t\tif (typeof(wx) == \"undefined\")\r\n\t\t{\r\n\t\t\tthis.toArrayBuffer(event.data).then(arrbuf=>{\r\n\t\t\t\tthis._messageHandler.dispatch(SocketTag.KSOCKET_MESSAGE, arrbuf);\r\n\t\t\t})\r\n\t\t}else{\r\n\t\t\tthis._messageHandler.dispatch(SocketTag.KSOCKET_MESSAGE, event.data);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate toArrayBuffer(blob):Promise<ArrayBuffer>\r\n\t{\r\n\t\t//将Blob 对象转换成 ArrayBuffer\r\n\t\tvar arrayBuffer;\r\n\t\tvar reader = new FileReader();\r\n\t\treader.readAsArrayBuffer(blob);\r\n\t\treturn new Promise((resolve,reject)=>{\r\n\t\t\treader.onload = function (e) {\r\n\t\t\t\tarrayBuffer = reader.result;\r\n\t\t\t\tresolve(arrayBuffer);\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\t\r\n\tpublic sendMessage(msg: Message): boolean{\r\n\t\tif( this._webSocket.readyState == WebSocket.OPEN ){\r\n\t\t\tthis._messageHandler.sendMessage(msg);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tpublic sendCustomMessage(msg: Message) {\r\n\t\tthis._messageHandler.dispatchMessage(msg);\r\n\t}\r\n\r\n\tstatic count = 0;\r\n\r\n\tprivate reconnect(){\r\n\t\t// cc.director.getScheduler().unscheduleAllForTarget(this);\r\n\t\tif(Socket.count >= 2||this._webSocket.readyState == WebSocket.OPEN)\r\n\t\t{\r\n\t\t\tclearTimeout(this.retryTimer);\r\n\t\t}else{\r\n\t\t\tif(this._webSocket.readyState == WebSocket.CLOSED)\r\n\t\t\t{\r\n\t\t\t\tthis.connect();\r\n\t\t\t}\r\n\t\t\tthis.retryTimer = setTimeout(()=>{\r\n\t\t\t\tthis.reconnect();\r\n\t\t\t},this._reconnetTimes)\r\n\t\t}\r\n\t}\r\n\r\n\tpublic onSocketClose(e: any = null){\r\n\t\tthis._messageHandler.dispatch(SocketTag.KSOCKET_CLOSE, \"\");\r\n\t\tconsole.log(\"websocket connect close.\" ,this._webSocket.readyState);\r\n\t\tthis.close();\r\n\t\tthis.reconnect();\r\n\t}\r\n\r\n\tpublic onSocketError(e: any = null){\r\n\t\tthis._messageHandler.dispatch(SocketTag.KSOCKET_ERROR, \"\");\r\n\t\tconsole.log(\"websocket io error.\");\r\n\t\t// this.reconnect(true);\r\n\t}\r\n}"]}