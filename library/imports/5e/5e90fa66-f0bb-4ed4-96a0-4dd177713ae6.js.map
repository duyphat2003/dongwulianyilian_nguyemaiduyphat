{"version":3,"sources":["assets\\framework\\plugin_boosts\\gamesys\\PsFx.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import Device from \"./Device\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class PsFx extends cc.Component {\r\n    \r\n    // @property([cc.ParticleSystem])\r\n    particles:cc.ParticleSystem[] = []\r\n\r\n    // @property([cc.Animation])\r\n    animations:cc.Animation[] = []\r\n\r\n    // armature:dragonBones.ArmatureDisplay = null\r\n    armature:any = null;\r\n\r\n    // name:string = null;\r\n\r\n    // _callback:Function;\r\n    // _target:any;\r\n\r\n    isPlaying:boolean = false;\r\n\r\n    @property({type: cc.AudioClip})\r\n    sfx:cc.AudioClip = null\r\n\r\n    @property(cc.Sprite)\r\n    sprite:cc.Sprite = null\r\n\r\n    playedTime:number = 0;\r\n\r\n    @property\r\n    duration:number = -1 ;\r\n\r\n    @property\r\n    fadeAfterFinish:number = -1;\r\n    \r\n    @property\r\n    repeatTime:number = 1;\r\n\r\n    @property\r\n    removeAfterFinish:boolean = false;\r\n\r\n\r\n    onLoad()\r\n    {\r\n        if(this.sprite == null)\r\n        {\r\n            this.sprite = this.getComponent(cc.Sprite);\r\n        }\r\n        let anim = this.getComponent(cc.Animation)\r\n        if(anim)\r\n        {\r\n            this.animations.push(anim);\r\n        }\r\n        let root_ps = this.getComponent(cc.ParticleSystem)\r\n        root_ps && this.particles.push(root_ps)\r\n        for (let i = 0; i < this.node.childrenCount; i++) {\r\n            const child = this.node.children[i]\r\n            let ps = child.getComponent(cc.ParticleSystem)   \r\n            if(ps)\r\n                this.particles.push(ps);\r\n            else{\r\n                let anim = child.getComponent(cc.Animation)\r\n                if(anim)\r\n                    this.animations.push(anim);\r\n            }\r\n        }\r\n        if(typeof(dragonBones) !=\"undefined\")\r\n        {\r\n            this.armature = this.getComponent(dragonBones.ArmatureDisplay);\r\n            if(!this.armature)\r\n                this.armature = this.getComponentInChildren(dragonBones.ArmatureDisplay);\r\n        }\r\n    }\r\n\r\n    play(audio:cc.AudioClip= null,spriteFrame = null)\r\n    {\r\n        this.isPlaying = true;\r\n        let dur = 0;\r\n        if(audio)\r\n        {\r\n            this.sfx = audio\r\n        }\r\n        if(spriteFrame)\r\n            this.sprite.spriteFrame = spriteFrame;\r\n        \r\n        this.node.active = true;\r\n        for (let i = 0; i < this.particles.length; i++) {\r\n            const element = this.particles[i];\r\n            element.resetSystem();\r\n            if(dur < element.duration)\r\n            {\r\n                dur = element.duration + element.life + element.lifeVar\r\n            }\r\n        }\r\n        for (let i = 0; i < this.animations.length; i++) {\r\n            const element = this.animations[i];\r\n            let clips = element.getClips()\r\n            if(clips && clips.length > 0)\r\n            {\r\n                let clip = clips[0]\r\n                let duration = clip.duration/clip.speed\r\n                if(duration > dur)\r\n                {\r\n                    dur = duration;\r\n                }\r\n                element.play(clip.name);\r\n            }\r\n        }\r\n\r\n        if(this.sfx)\r\n        {\r\n            Device.playEffect(this.sfx,false);\r\n        }\r\n        \r\n        if(this.armature)\r\n        {\r\n            this.armature.playAnimation(\"\",this.repeatTime);\r\n            dur = this.duration;\r\n            if(dur <= 0)\r\n            {\r\n                return new Promise((resolve,reject)=>{\r\n                    // this.armature.addEventListener(dragonBones.EventObject.LOOP_COMPLETE, _=>{\r\n                    //     console.log(\"loop complete\");\r\n                    //     this.fadeOnFinish(resolve)\r\n                    // })\r\n                    this.armature.addEventListener(dragonBones.EventObject.COMPLETE, _=>{\r\n                        console.log(\"armature play complete\");\r\n                        if(this.removeAfterFinish)\r\n                        {\r\n                            this.node.removeFromParent();\r\n                        }else{\r\n                            this.fadeOnFinish(resolve)\r\n                        }\r\n                    })\r\n                })\r\n            }\r\n        }else{\r\n            dur = dur + 0.1;\r\n        }\r\n        // console.log(\"[psfx] play : \" ,  this.name,  dur);\r\n        return new Promise((resolve,reject)=>{\r\n            setTimeout(_=>{\r\n                if(!this.isValid) return\r\n                if(this.removeAfterFinish)\r\n                {\r\n                    this.node.removeFromParent();\r\n                }else{\r\n                    this.fadeOnFinish(resolve)\r\n                }\r\n            },dur * 1000)\r\n        })\r\n    }\r\n\r\n    fadeOnFinish(callback)\r\n    {\r\n        this.isPlaying = false;\r\n        for (let i = 0; i < this.particles.length; i++) {\r\n            const element = this.particles[i];\r\n            element.stopSystem();\r\n        }\r\n        if(this.fadeAfterFinish > 0)\r\n        {\r\n            let seq = cc.sequence(cc.fadeOut(this.fadeAfterFinish),cc.callFunc(callback))\r\n            this.node.runAction(seq)\r\n        }else{\r\n            callback();\r\n        }\r\n    }\r\n\r\n    reset(): any {\r\n        this.playedTime = 0;\r\n    }\r\n\r\n    start () {\r\n\r\n    }\r\n\r\n    // update (dt) {}\r\n}\r\n"]}