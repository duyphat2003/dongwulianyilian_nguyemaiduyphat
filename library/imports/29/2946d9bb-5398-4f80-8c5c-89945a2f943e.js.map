{"version":3,"sources":["assets\\framework\\plugin_boosts\\misc\\DataCenter.ts"],"names":[],"mappings":";;;;;;AAAA,sDAA8C;AAG9C,IAAM,oBAAoB,GAAG,EAAE,CAAA;AAE/B,IAAM,kBAAkB,GAAG,EAAE,CAAA;AAC7B,SAAgB,EAAE,CAAC,IAAI,EAAC,YAAmB;IAAnB,6BAAA,EAAA,mBAAmB;IAEvC,OAAO,UAAU,MAAU;QAEvB,4BAA4B;QAC5B,IAAI,KAAK,GAAO,MAAM,CAAC,WAAW,CAAC,CAAC,WAAW,CAAC;QAChD,wCAAwC;QACxC,kBAAkB,CAAC,MAAM,CAAC,GAAG,EAAC,IAAI,MAAA,EAAC,YAAY,cAAA,EAAC,CAAC;IACrD,CAAC,CAAA;AACL,CAAC;AATD,gBASC;AACD,SAAgB,KAAK,CAAC,GAAmB;IACrC,OAAO,UAAU,MAAW,EAAE,YAAoB;QAC9C,IAAG,GAAG,IAAI,GAAG,CAAC,OAAO;YACjB,MAAM,CAAC,YAAY,CAAC,GAAG,GAAG,CAAC,OAAO,CAAC;QACvC,qDAAqD;QACrD,IAAI,WAAW,GAAG,MAAM,CAAC,WAAW,CAAA;QACpC,IAAI,GAAG,GAAG,oBAAoB,CAAC,WAAW,CAAC,CAAA;QAC3C,IAAG,GAAG,IAAI,IAAI,EACd;YACI,GAAG,GAAG,EAAE,CAAA;YACR,oBAAoB,CAAC,WAAW,CAAC,GAAG,GAAG,CAAC;SAC3C;QACD,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IAC3B,CAAC,CAAA;AACL,CAAC;AAdD,sBAcC;AAGD;IAMI;QAJQ,gBAAW,GAAU,YAAY,CAAA;QAEjC,QAAG,GAAG,EAAE,CAAA;QACR,QAAG,GAAG,EAAE,CAAA;QAGZ,IAAI,CAAC,GAAG,GAAG,EAAE,CAAA;QACb,IAAI,CAAC,GAAG,GAAG,EAAE,CAAA;IACjB,CAAC;IAEO,mCAAc,GAAtB,UAAuB,SAAU;QAE7B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAClB,IAAI,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,WAAW,CAAA;QAC1C,IAAI,GAAG,GAAG,oBAAoB,CAAC,MAAM,CAAC,CAAA;QACtC,IAAI,GAAG,GAAG,kBAAkB,CAAC,MAAM,CAAC,CAAA;QACpC,uCAAuC;QACvC,KAAI,IAAI,CAAC,IAAI,GAAG,EAChB;YACI,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;YACf,IAAG,OAAM,CAAC,CAAC,CAAC,IAAI,UAAU;gBAAE,SAAS;YACrC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAA;YACxB,OAAO,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,gCAAgC;SACnD;QACD,SAAS,GAAG,SAAS,IAAK,GAAG,CAAC,IAAI,CAAC;QACnC,IAAI,CAAC,WAAW,CAAC,SAAS,EAAC,GAAG,CAAC,YAAY,CAAC,CAAA;IAChD,CAAC;IAED,6BAAQ,GAAR,UAAS,CAAC,EAAC,YAAY;QAEnB,IAAI,KAAK,GAAO,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,CAAA;QAC7C,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,KAAK,CAAC,gBAAgB,CAAC,CAAC,EAAC;YACrB,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QAC3B,CAAC,CAAC,CAAA;QACF,KAAK,CAAC,gBAAgB,CAAC,CAAC,EAAC,UAAS,CAAC;YAC/B,IAAI,CAAC,OAAO,CAAC,CAAC,EAAC,CAAC,CAAC,CAAA;QACrB,CAAC,CAAC,CAAA;QAEF,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,YAAY,CAAC;QAC3B,IAAI,IAAI,GAAG,OAAM,CAAC,YAAY,CAAC,CAAC;QAChC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAI,IAAI,CAAC;QACpB,OAAO,CAAC,GAAG,CAAC,yBAAyB,GAAG,CAAC,GAAG,GAAG,GAAG,YAAY,GAAE,GAAG,GAAC,IAAI,GAAC,GAAG,CAAC,CAAA;IACjF,CAAC;IAED,4BAAO,GAAP,UAAQ,CAAC,EAAC,EAAE;QAER,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAA;QACnB,IAAG,CAAC,IAAI,EAAE;YAAG,OAAO;QACpB,IAAI,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAA;QACtB,IAAI,EAAE,GAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAA;QACvB,IAAG,IAAI,IAAI,OAAM,CAAC,EAAE,CAAC,EACrB;YACI,OAAO,CAAC,IAAI,CAAC,2BAA2B,GAAC,OAAM,CAAC,EAAE,CAAC,GAAC,SAAS,GAAG,EAAE,GAAE,GAAG,GAAC,IAAI,GAAC,kBAAkB,CAAC,CAAA;YAChG,IAAG,IAAI,IAAI,QAAQ;gBACf,EAAE,GAAG,MAAM,CAAC,EAAE,CAAC,CAAA;iBACd,IAAG,IAAI,IAAI,SAAS,EACzB;gBACI,EAAE,GAAG,CAAC,EAAE,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAA,KAAK,CAAA;aACpC;SACJ;QACD,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;QACjB,OAAO,CAAC,GAAG,CAAC,6BAA6B,EAAG,EAAE,EAAC,EAAE,CAAC,CAAC;QACnD,oBAAK,CAAC,IAAI,CAAC,EAAE,EAAC,EAAE,EAAC,CAAC,CAAC,CAAA;IACvB,CAAC;IAEO,4BAAO,GAAf,UAAgB,CAAC;QAEb,OAAO,IAAI,CAAC,WAAW,GAAE,GAAG,GAAG,CAAC,CAAA;IACpC,CAAC;IAED,4BAAO,GAAP,UAAQ,CAAC;QAEL,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACvB,CAAC;IAED,0BAAK,GAAL,UAAM,CAAC,EAAC,GAAG,EAAC,GAAG;QAEX,IAAG,CAAC,GAAG,GAAG,EACV;YACI,OAAO,GAAG,CAAC;SACd;aAAK,IAAG,CAAC,GAAG,GAAG,EAChB;YACI,OAAO,CAAC,CAAC;SACZ;aAAI;YACD,OAAO,CAAC,CAAC;SACZ;IACL,CAAC;IAED,4BAAO,GAAP,UAAQ,CAAC,EAAC,CAAC;QAEP,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAA;QACb,IAAG,CAAC,IAAI,IAAI;YAAE,OAAO;QACrB,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAA;QACnB,IAAI,EAAE,GAAI,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAA;QACvB,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,CAAA;QAChB,oBAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAC,EAAE,EAAC,CAAC,CAAC,CAAA;IACpC,CAAC;IAEO,yBAAI,GAAZ;QAEI,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,GAAG,EACtB;YACI,IAAI,WAAW,GAAG,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAA;YACvD,IAAI,CAAC,GAAO,WAAW,CAAA;YACvB,IAAG,WAAW,EACd;gBACI,IAAI,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAA;gBACtB,IAAG,IAAI,IAAI,QAAQ,EACnB;oBACI,CAAC,GAAG,MAAM,CAAC,WAAW,CAAC,CAAC;iBAC3B;qBAAK,IAAG,IAAI,IAAI,SAAS,EAC1B;oBACI,CAAC,GAAG,WAAW,IAAI,MAAM,CAAA,CAAC,CAAA,IAAI,CAAA,CAAC,CAAA,KAAK,CAAC;iBACxC;aACJ;iBAAI;gBACD,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;aACvB;YACD,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;SACnB;IACL,CAAC;IAED,yBAAI,GAAJ;QAEI,OAAO,CAAC,GAAG,CAAC,uDAAuD,CAAC,CAAA;QACpE,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,GAAG,EACtB;YACI,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAA;YACnB,IAAI,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAA;YACxB,YAAY,CAAC,OAAO,CAAC,EAAE,EAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;YACtC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,SAAS,CAAC,OAAO,EAAE,EAAE,EAAC,CAAC,CAAC,CAAC,CAAA;SAC9C;QACD,OAAO,CAAC,GAAG,CAAC,4DAA4D,CAAC,CAAA;QACzE,wDAAwD;IAC5D,CAAC;IAEO,gCAAW,GAAnB,UAAoB,CAAC,EAAE,YAAmB;QAAnB,6BAAA,EAAA,mBAAmB;QAEtC,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;QACrB,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;QAC7B,IAAG,YAAY,EACf;YACI,IAAI,CAAC,IAAI,EAAE,CAAA;YACX,IAAI,CAAC,IAAI,EAAE,CAAC;SACf;IACL,CAAC;IAEM,cAAG,GAAV,UAAW,CAAC,EAAC,QAAQ,EAAC,MAAO;QAEzB,oBAAK,CAAC,GAAG,CAAC,CAAC,EAAC,QAAQ,EAAC,MAAM,CAAC,CAAC;IACjC,CAAC;IAEM,aAAE,GAAT,UAAU,CAAC,EAAC,QAAQ,EAAC,MAAO;QAEzB,oBAAK,CAAC,EAAE,CAAC,CAAC,EAAE,QAAQ,EAAC,MAAM,CAAC,CAAA;QAC5B,IAAI,CAAC,GAAG,CAAC,CAAC,EAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;IAC1B,CAAC;IAEM,cAAG,GAAV,UAAW,CAAC;QAER,IAAI,IAAI,GAAG,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAA;QACvB,IAAI,SAAS,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;QACxB,IAAI,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;QACnB,IAAI,MAAM,GAAG,UAAU,CAAC,OAAO,CAAC,SAAS,CAAC,CAAA;QAC1C,IAAG,MAAM;YACL,OAAO,MAAM,CAAC,IAAI,CAAC,CAAA;;YAEnB,OAAO,IAAI,CAAC;IACpB,CAAC;IAEM,cAAG,GAAV,UAAW,CAAC,EAAC,CAAC;QAEV,IAAI,IAAI,GAAG,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAA;QACvB,IAAI,SAAS,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;QACxB,IAAI,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;QACnB,IAAI,MAAM,GAAG,UAAU,CAAC,OAAO,CAAC,SAAS,CAAC,CAAA;QAC1C,IAAG,MAAM,EACT;YACI,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SACpB;IACL,CAAC;IAEM,mBAAQ,GAAf,UAAgB,GAAG;QAEf,IAAI,CAAC,GAAG,IAAI,GAAG,EAAE,CAAC;QAClB,CAAC,CAAC,cAAc,EAAE,CAAA;QAClB,OAAO,CAAC,CAAC;IACb,CAAC;IA1LM,kBAAO,GAAG,EAAE,CAAA;IA2LvB,iBAAC;CA9LD,AA8LC,IAAA;kBA9LoB,UAAU","file":"","sourceRoot":"/","sourcesContent":["import { event } from \"../utils/EventManager\";\r\n\r\n\r\nconst all_class_properties = {}\r\n\r\nconst all_registed_class = {}\r\nexport function dc(name,serializable = true):Function\r\n{\r\n    return function (target:any)\r\n    {\r\n        // target.endRegister(name);\r\n        let proto:any = target['prototype'].constructor;\r\n        // let cls = all_class_properties[proto]\r\n        all_registed_class[target] = {name,serializable};\r\n    }\r\n}\r\nexport function field(obj?:{default?:any}) {\r\n    return function (target: any, propertyName: string) {\r\n        if(obj && obj.default)\r\n            target[propertyName] = obj.default;\r\n        // target.register(propertyName,target[propertyName])\r\n        let constructor = target.constructor\r\n        let cls = all_class_properties[constructor]\r\n        if(cls == null)\r\n        {\r\n            cls = []\r\n            all_class_properties[constructor] = cls;\r\n        }\r\n        cls.push(propertyName);\r\n    }\r\n}\r\n\r\n\r\nexport default class DataCenter\r\n{\r\n    private __namespace:string = \"DataCenter\"\r\n    static alldata = {}\r\n    private kvs = {}\r\n    private kts = {}\r\n    constructor()\r\n    {\r\n        this.kvs = {}\r\n        this.kts = {}\r\n    }\r\n\r\n    private registerFields(namespace?)\r\n    {\r\n        console.log(this);\r\n        let target = this[\"__proto__\"].constructor \r\n        let cls = all_class_properties[target]\r\n        let cfg = all_registed_class[target]\r\n        // let proto:any = target['prototype'];\r\n        for(var i in cls)\r\n        {\r\n            let k = cls[i];\r\n            if(typeof(k) == \"function\") continue;\r\n            this.register(k,this[k])\r\n            delete this[k]; //删除默认属性 ,否则设置 setter getter 会失效\r\n        }\r\n        namespace = namespace ||  cfg.name;\r\n        this.endRegister(namespace,cfg.serializable)\r\n    }\r\n\r\n    register(k,defaultValue)\r\n    {\r\n        let proto:any = this.constructor[\"prototype\"]\r\n        let self = this;\r\n        proto.__defineGetter__(k,function(){\r\n            return self.getData(k);\r\n        })\r\n        proto.__defineSetter__(k,function(s){\r\n            self.setData(k,s)\r\n        }) \r\n        \r\n        this.kvs[k] = defaultValue;\r\n        let type = typeof(defaultValue);\r\n        this.kts[k] =  type;\r\n        console.log(\"[DataCenter] register :\" + k + \":\" + defaultValue +\"(\"+type+\")\")\r\n    }\r\n \r\n    setData(k,nv)\r\n    {\r\n        let v = this.kvs[k]\r\n        if(v == nv ) return;\r\n        let type = this.kts[k]\r\n        let kk =this._field_(k)\r\n        if(type != typeof(nv))\r\n        {\r\n            console.warn(\"[DataCenter] wrong type <\"+typeof(nv)+\"> for :\" + kk +\"<\"+type+\"> ,converting...\")\r\n            if(type == \"number\")\r\n                nv = Number(nv)\r\n            else if(type == \"boolean\")\r\n            {\r\n                nv = (nv == \"true\") ? true :false\r\n            }\r\n        }\r\n        this.kvs[k] = nv;\r\n        console.log(\"[DataCenter] onValueChanged\" , kk,nv);\r\n        event.emit(kk,nv,v)\r\n    }\r\n\r\n    private _field_(k)\r\n    {\r\n        return this.__namespace +\".\" + k\r\n    }\r\n\r\n    getData(k)\r\n    {\r\n        return this.kvs[k];\r\n    }\r\n\r\n    limit(v,min,max)\r\n    {\r\n        if(v > max)\r\n        {\r\n            return max;\r\n        }else if(v < min)\r\n        {\r\n            return 0;\r\n        }else{\r\n            return v;\r\n        }\r\n    }\r\n\r\n    addData(k,c)\r\n    {\r\n        c = Number(c)\r\n        if(c == null) return;\r\n        let v = this.kvs[k]\r\n        let nv =  Number(v) + c\r\n        this.kvs[k] = nv\r\n        event.emit(this._field_(k),nv,v)\r\n    }\r\n\r\n    private load()\r\n    {\r\n        for (var k in this.kvs)\r\n        {\r\n            let fromstroage = localStorage.getItem(this._field_(k))\r\n            let v:any = fromstroage\r\n            if(fromstroage)\r\n            {\r\n                let type = this.kts[k]\r\n                if(type == \"number\")\r\n                {\r\n                    v = Number(fromstroage);\r\n                }else if(type == \"boolean\")\r\n                {\r\n                    v = fromstroage == \"true\"?true:false;\r\n                }\r\n            }else{\r\n                v = this.getData(k);\r\n            }\r\n            this.kvs[k] = v;\r\n        }\r\n    }\r\n\r\n    save()\r\n    {\r\n        console.log(\"[DataCenter] save :==================================\")\r\n        for (var k in this.kvs)\r\n        {\r\n            let v = this.kvs[k]\r\n            let kk = this._field_(k)\r\n            localStorage.setItem(kk,v.toString());\r\n            console.log(cc.js.formatStr(\"%s:%s\" ,kk,v))\r\n        }\r\n        console.log(\"[DataCenter] save succ :==================================\")\r\n        // localStorage.setItem(\"#1_coin\",this.getData(\"coin\"));\r\n    }\r\n\r\n    private endRegister(s ,serializable = true)\r\n    {\r\n        this.__namespace = s;\r\n        DataCenter.alldata[s] = this;\r\n        if(serializable)\r\n        {\r\n            this.load()\r\n            this.save();\r\n        }\r\n    }\r\n\r\n    static off(k,callback,target?)\r\n    {\r\n        event.off(k,callback,target);\r\n    }\r\n\r\n    static on(k,callback,target?)\r\n    {\r\n       event.on(k ,callback,target)\r\n       this.set(k,this.get(k)) \r\n    }\r\n\r\n    static get(k)\r\n    {\r\n        let strs = k.split(\".\")\r\n        let namespace = strs[0];\r\n        let name = strs[1];\r\n        let target = DataCenter.alldata[namespace]\r\n        if(target)\r\n            return target[name]\r\n        else \r\n            return null;\r\n    }\r\n\r\n    static set(k,v)\r\n    {\r\n        let strs = k.split(\".\")\r\n        let namespace = strs[0];\r\n        let name = strs[1];\r\n        let target = DataCenter.alldata[namespace]\r\n        if(target)\r\n        {\r\n            target[name] = v;\r\n        }\r\n    }\r\n\r\n    static register(cls)\r\n    {\r\n        let v = new cls();\r\n        v.registerFields()\r\n        return v;\r\n    }\r\n}"]}